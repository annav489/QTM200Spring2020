<<<<<<< HEAD
mean(c(1,2,3,4,5, NA))
mean(c(1,2,3,4,5,NA), na.rm = TRUE)
starwars
filter(starwars, hair_color ==NA)
filter(starwars, is.na(hair_color))
filter(starwars, hair == "black")
filter(starwars, hair_color == "black")
filter(starwars, hair_color == "none")
filter(starwars, hair_color == "none" | is.na(hair_color))
flights
mutate(flights, in_flight_gain = dep_delat - arr_delay)
mutate(flights, in_flight_gain = dep_delay - arr_delay)
mutate(flights, air_time_hrs = air_time/60)
##Distance as a proportion
mutate(flights, mean_dist = distance/mean(distance))
##gdpPercap vs. lifeExp for year 1952
new_gap <- filter(gapminder, year = 1952)
##gdpPercap vs. lifeExp for year 1952
new_gap <- filter(gapminder, year == 1952)
qplot(gspPercap, lifeExp, data = new_gap)
qplot(gdpPercap, lifeExp, data = new_gap)
new_gap <- filter(gapminder, year == 1952 & gdpPercap < 90000)
qplot(gdpPercap, lifeExp, data = new_gap)
new_new_gap <- mutate(new_gdp, log_gdp = log(gdpPercap)
new_gap <- filter(gapminder, year == 1952)
new_gap <- filter(gapminder, year == 1952)
new_new_gap <- mutate(new_gdp, log_gdp = log(gdpPercap)
new_gap <- filter(gapminder, year == 1952)
new_new_gap <- mutate(new_gdp, log_gdp = log(gdpPercap))
new_gap <- filter(gapminder, year == 1952)
new_new_gap <- mutate(new_gdp, log_gdp = log(gdpPercap))
new_gap <- filter(gapminder, year == 1952)
new_new_gap <- mutate(new_gap, log_gdp = log(gdpPercap))
qplot(gdpPercap, lifeExp, data = new_new_gap)
new_gap <- filter(gapminder, year == 1952)
new_new_gap <- mutate(new_gap, log_gdp = log(gdpPercap))
qplot(gdpPercap, lifeExp, data = new_new_gap)
qplot(log_gdp, lifeExp, data = new_new_gap)
sum(1,2,3,4)
1 %>% sum (2,3,4)
sum(1, 3) %>% mean(1)
gapminder %>% filter(year == 1952)
gapminder %>%
filter(year == 1952) %>%
mutate(log_gdp = log(gdpPercap))
qplot(log_gdp, LifeExp, data = new_gap)
gapminder %>%
filter(year == 1952) %>%
mutate(log_gdp = log(gdpPercap))
gapminder %>%
filter(year == 1952) %>%
mutate(log_gdp = log(gdpPercap))
qplot(log_gdp, LifeExp, data = new_gap)
gapminder %>%
filter(year == 1952) %>%
mutate(log_gdp = log(gdpPercap))
new_gap <- gapminder %>%
filter(year == 1952) %>%
mutate(log_gdp = log(gdpPercap))
qplot(log_gdp, LifeExp, data = new_gap)
qplot(log_gdp, lifeExp, data = new_gap)
library(tidyverse)
library(nycflights13)
library(gapminder)
select(gapminder, continent)
library(nycflights13)
##Summarize
##Setting mean function to a value creates a column title
summarize(flights, mean_dep_delay = mean(dep_delay, na.rm = TRUE))
##Further Grouping
flights %>%
group_by(month, day) %>%
summarize(mean_dep_delay = mean(dep_delay, na.rm = TRUE))
qplot(gdpPercap, lifeExp, data = gapminder)
filter(gapminder, year == 2002 & year == 2007)
filter(gapminder, year == 2002 & year == 2007) %>%
qplot(gdpPercap, lifeExp, data = gapminder)
2002and2007 <- filter(gapminder, year == 2002 & year == 2007)
2002and2007 <- filter(gapminder, year == "2002"" & year == "2007")
gapminder_filtered <- filter(gapminder, year == "2002" & year == "2007")
qplot(gdpPercap, lifeExp, data = gapminder_filtered)
##ggplot vs. qplot
qplot(x = gdpPercap, y = lifeExp, data = gapminder, facets = continent~year)
##Dots too large so...
qplot(x = gdpPercap, y = lifeExp, data = gapminder, size = I(0.5), facets = continent~year)
##Free up scales in ggplot
ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(size = 0.5) +
facet_grid(continent~year, scales = "free")
## Afghan. in 1952 v. lifeExp
ggplot() + geom_point(mapping = aes(x = 779, y = 28.8))
##Adding elements based on data frame
ggplot() +
geompoint(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp))
##Adding elements based on data frame
ggplot() +
geom_point(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp))
##Adding elements based on data frame
ggplot() +
geom_point(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_smooth(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp))
##Common issue with ggplot: watch plus signs
ggplot(gapminder, aes(gdpPercap, lifeExp))
library(babynames)
install.packages("babynames")
library(babynames)
library(tidyverse)
library(tidyverse)
library(gapminder)
head(babynames)
babynames %>%
group_by(sex) %>%
filter(prop == max(prop, na.rm = TRUE))
summarize(babynames, males = count(sex, na.rm = TRUE))
head(babynames)
babynames %>%
group_by(sex) %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
group_by(year) %>%
filter(count == count(sex, na.rm = TRUE))
babynames %>%
group_by(year) %>%
filter(sex = F)
babynames %>%
group_by(year) %>%
filter(sex == M)
babynames %>%
group_by(year) %>%
filter(sex == "M")
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M")
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M", n == sum(n))
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M", m == sum(n))
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M", n == sum(n))
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M")
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M") %>%
summarize(n_sum == sum(n))
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M") %>%
summarize(sum == sum(n))
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M") %>%
summarize(n == sum(n))
babynames %>%
filter(year == 1982, sex == "M")
babynames %>%
filter(year == 1982, sex == "M") %>%
sum(n)
babynames %>%
filter(year == 1982, sex == "M") %>%
sum(n, na.rm = TRUE)
babynames %>%
filter(year == 1982, sex == "M")
babynames %>%
filter(year == 1982, sex == "M", n == sum(n))
babynames %>%
filter(year == 1982, sex == "M")
sum(babynames$n)
babynames %>%
select(year == 1982, sex == "M")
sum(babynames$n)
babynames %>%
filter(year == 1982, sex == "M")
babynames %>%
filter(year == 1982, sex == "M") %>%
sum(n)
babynames %>%
filter(year == 1982, sex == "M") %>%
count(n)
babynames %>%
filter(year == 1982, sex == "M") %>%
count(n)
babynames %>%
filter(year == 1982, sex == "M")
babynames %>%
filter(year == 1982, sex == "M") %>%
tally(n)
babynames %>%
group_by(sex)
babynames %>%
group_by(sex, year)
head(babynames)
babynames %>%
group_by(sex, year) %>%
summarize(names = tally(name))
babynames %>%
group_by(sex, year) %>%
summarize(name = tally(name))
head(babynames)
babynames %>%
filter(year == 1982, sex == "M") %>%
mutate(total = sum(n))
head(babynames)
select(babynames, year,sex,n)
select(babynames, year,sex,n) %>%
sum(n)
select(babynames, year,sex,n) %>%
group_by(year, sex) %>%
summarize(number_per_year = sum(n))
babynames %>%
filter(year = 2017) %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
filter(year == 2017) %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
filter(year == 2017, sex = "M") %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
filter(year == 2017, sex == "M") %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
filter(year == 2017, sex == "M", sex == "F") %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
group_by(sex) %>%
filter(year == 2017, sex == "M") %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
filter(year == 2017, sex == "M")
babynames %>%
filter(year == 2017, sex == "M") %>%
arrange(desc(prop))
babynames %>%
filter(year == 2017) %>%
arrange(desc(prop))
top_names_2017 = babynames %>%
filter(year == 2017) %>%
arrange(desc(prop))
top_names_2017
top_names_2017 = c("Emma", "Olivia", "Liam", "Noah")
top_names_2017
head(babynames)
babynames %>%
filter(name == top_names_2017)
head(babynames)
babynames %>%
filter(name == top_names_2017) %>%
qplot(year, prop)
babynames %>%
group_by(name) %>%
qplot(year, prop)
babynames %>%
group_by(name) %>%
qplot(year, prop, babynames)
babynames %>%
group_by(name)
babynames %>%
filter(name == top_names_2017)
qplot(year, prop, babynames)
babynames %>%
filter(name == top_names_2017) %>%
qplot(year, prop, babynames)
babynames %>%
filter(name == top_names_2017) %>%
qplot(year, n, babynames)
babynames$prop
babynames %>%
filter(name == top_names_2017) %>%
qplot(year, prop, babynames, color = name)
babynames %>%
filter(name == top_names_2017) %>%
qplot(x = year, y = prop, babynames, color = name)
names_filt <- filter(babynames, name %in% top_names_2017)
names_filt
qplot(x = year, y = prop, names_filt, geom = 'line', color = name)
library(gapminder)
gap_filt <- filter(gapminder,
country %in% c("China", "India", "Sierra Leone"))
qplot(x = year,
y = gdpPercap,
data = gap_filt,
geom = 'line',
color = country)
gap_filt
names_filt
qplot(x = year, y = prop, names_filt, geom = 'line', color = name)
ggplot(data = names_filt, mapping = aes(x = year, y = prop))
##Free up scales in ggplot
ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(size = 0.5) +
facet_grid(continent~year, scales = "free")
ggplot(data = names_filt, mapping = aes(x = year, y = prop) + geom_line(size = 0.5))
ggplot() + geom_line(data = names_filt, mapping = aes(x = year, y = prop)))
ggplot() + geom_line(data = names_filt, mapping = aes(x = year, y = prop))
names_filt <- filter(babynames, name %in% top_names_2017)
names_filt <- filter(babynames, name %in% top_names_2017)
ggplot() + geom_line(data = names_filt, mapping = aes(x = year, y = prop))
library(babynames)
library(tidyverse)
library(gapminder)
head(babynames)
babynames %>%
group_by(sex) %>%
filter(prop == max(prop, na.rm = TRUE))
## Mary
babynames %>%
filter(year == 1982, sex == "M") %>%
mutate(total = sum(n))
##1,814,611
select(babynames, year, sex, n) %>%
group_by(year, sex) %>%
summarize(number_per_year = sum(n))
babynames %>%
filter(year == 2017) %>%
arrange(desc(prop))
top_names_2017 = c("Emma", "Olivia", "Liam", "Noah")
names_filt <- filter(babynames, name %in% top_names_2017)
ggplot() + geom_line(data = names_filt, mapping = aes(x = year, y = prop))
ggplot() + geom_line(data = names_filt, mapping = aes(x = year, y = prop), color = name)
ggplot() + geom_line(data = names_filt, mapping = aes(x = year, y = prop), color = "name")
ggplot() + geom_line(data = names_filt, mapping = aes(x = year, y = prop, color = name))
names_filt_high <- filter(names_filt, prop > 0.0002)
ggplot() + geom_line(data = names_filt_high, mapping = aes(x = year, y = prop, color = name))
library(gapminder)
##ggplot vs. qplot
qplot(x = gdpPercap, y = lifeExp, data = gapminder, facets = continent~year)
library(tidyverse)
##ggplot vs. qplot
qplot(x = gdpPercap, y = lifeExp, data = gapminder, facets = continent~year)
library(babynames)
library(tidyverse)
library(gapminder)
head(babynames)
babynames %>%
group_by(sex) %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
filter(year == 1982, sex == "M") %>%
mutate(total = sum(n))
library(tidyverse)
gss_fake <- gss_cat %>% mutate(empl = sample(c("Yes", "No"),
as.double(count(gss_cat)),
replace = T
)
)
state.name
state.abb
state.keys <- tibble(state = state.name, ab = state.abb)
state.keys
midwest
ggplot(midwest, aes(PID, percbelowpoverty)) +
geom_point(group = state)
midwest
ggplot(midwest, aes(PID, percbelowpoverty)) +
geom_point(aes(color = state, shape = state))
##Quiz 3 Question
ggplot(midwest, aes(PID, percbelowpoverty)) +
geom_point(aes(group = state, color = state, shape = state))
library(nycflights13)
filter(flights, month == 1 & day == 1)
filter(flights, month == 1 & month == 2)
filter(flights, month == 1 | month == 2)
library(tidyverse)
newgss <- read.csv("newgss.csv")
txhousing_filter <- filter(txhousing, year == 2014 & city == c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
txhousing_filter
txhousing
txhousing
txhousing_filter <- filter(txhousing, year == 2014 & city == c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
txhousing_filter <- filter(txhousing, year == 2014 & city == c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
head(txhousing_filter)
ggplot(txhousing_filter, aes(month, median)) +
geom_point(aes(color = city), size = 0.5) +
geom_line(aes(color = city), alpha = 0.5)
txhousing_filter <- filter(txhousing, year == 2014 & city == c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
ggplot(txhousing_filter, aes(month, median)) +
geom_point(aes(color = city), size = 0.5) +
geom_line(aes(color = city), alpha = 0.5)
ggplot(txhousing_filter, aes(month, median)) +
geom_point(aes(color = city), size = 0.5)
txhousing_filter <- filter(txhousing, year == 2014)
txhousing_filter <- filter(txhousing, year == 2014)
txhousing_filter2 <- filter(txhousing_filter, city == c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
txhousing_filter2 <- filter(txhousing_filter, city %in% c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
ggplot(txhousing_filter2, aes(month, median)) +
geom_point(aes(color = city), size = 0.5) +
geom_line(aes(color = city), alpha = 0.5)
txhousing_filter2 <- filter(txhousing_filter,year == 2014 & city %in% c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
ggplot(txhousing_filter2, aes(month, median)) +
geom_point(aes(color = city), size = 0.5) +
geom_line(aes(color = city), alpha = 0.5)
txhousing_filter <- filter(txhousing_filter,year == 2014 & city %in% c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
ggplot(txhousing_filter, aes(month, median)) +
geom_point(aes(color = city), size = 0.5) +
geom_line(aes(color = city), alpha = 0.5)
txhousing_filter <- filter(txhousing, year == 2014 & city %in% c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
ggplot(txhousing_filter, aes(month, median)) +
geom_point(aes(color = city), size = 0.5) +
geom_line(aes(color = city), alpha = 0.5)
install.packages(fastqcr)
install.packages("fastqcr")
library(fastqcr)
fastqc_install(dest.dir = "~/bin")
fastqc(fq.dir = "~/bin/sratoolkit.2.9.6-1-mac64/bin", qc.dir = NULL, threads = 4, fastqc.path = "~/bin/fastQC")
fastqc(fq.dir = "~/bin/sratoolkit.2.9.6-1-mac64/bin", qc.dir = NULL, threads = 4, fastqc.path = "~/bin/fastQC/fastqc")
fastqc(fq.dir = "~/bin/sratoolkit.2.9.6-1-mac64/bin", qc.dir = NULL, threads = 4, fastqc.path = "~/bin/fastQC/fastqc")
fastqc(fq.dir = "~/bin/sratoolkit.2.9.6-1-mac64/bin", qc.dir = NULL, threads = 4, fastqc.path = "~/bin/fastQC/fastqc")
fastqc(fq.dir = "~/bin/sratoolkit.2.9.6-1-mac64/bin", qc.dir = NULL, threads = 4, fastqc.path = "~/bin/fastQC/fastqc")
getwd()
setwd("~/Desktop")
setwd("~/Documents/GitHub/QTM200Spring2020/problem_sets/PS1")
##Question 3
expenditure <- read.table("expenditure.txt", header=TRUE)
#a
qplot(X1, Y, expenditure)
#a
library("tidyverse")
qplot(X1, Y, expenditure)
head(expenditure)
qplot(x = X1, y = Y, data = expenditure)
qplot(x = X2, y = Y, data = expenditure)
qplot(x = X3, y = Y, data = expenditure)
qplot(x = X1, y = X2, data = expenditure)
qplot(x = X1, y = Y, data = expenditure)
#X1 and Y show a strong positive correlation. On average, as per capita expenditure on public education increases, per capita personal income increases
qplot(x = X2, y = Y, data = expenditure)
#X2 and Y have a linear correlation. The number of resident per thousand remains relatively constant and the per capita expenditure on public education increases.
qplot(x = X3, y = Y, data = expenditure)
qplot(x = X1, y = Y, data = expenditure)
#X2 and Y have a linear correlation. The number of resident per thousand remains relatively constant and the per capita expenditure on public education increases.
qplot(x = X3, y = Y, data = expenditure)
#b
qplot(x = Region, y = Y, data = expenditure)
#b
qplot(x = Y, y = Region, data = expenditure)
#b
qplot(x = Region, y = Y, data = expenditure)
boxplot(x = Region, y = Y, data = expenditure)
boxplot(x = expenditure$Region, y = expenditure$Y)
library("ggplot")
ggplot(expenditure, aes(Region, Y)) +
geom_boxplot()
ggplot(expenditure, aes(Region, Y)) +
geom_boxplot(aes(group=Region))
#c
qplot(x = X1, y = Y, data = expenditure)
#X1 and Y show a strong positive correlation. On average, as per capita expenditure on public education increases, per capita personal income increases
qplot(x = X1, y = Y, data = expenditure, group = Region, color = Region)
#X1 and Y show a strong positive correlation. On average, as per capita expenditure on public education increases, per capita personal income increases
qplot(x = X1, y = Y, data = expenditure, color = Region)
#X1 and Y show a strong positive correlation. On average, as per capita expenditure on public education increases, per capita personal income increases
qplot(x = X1, y = Y, data = expenditure, color = Region, shape = region)
#X1 and Y show a strong positive correlation. On average, as per capita expenditure on public education increases, per capita personal income increases
qplot(x = X1, y = Y, data = expenditure, color = Region, shape = Region)
#c
qplot(x = X1, y = Y, data = expenditure)
#X1 and Y show a strong positive correlation. On average, as per capita expenditure on public education increases, per capita personal income increases
qplot(x = X1, y = Y, data = expenditure, shape = Region)
ggplot(expenditure, aes(X1, Y)) +
geom_point(aes(shape = Region, color = Region)) +
ggplot(data=data.frame(x=c(1:16))) + geom_point(aes(x=x,y=x,shape=x)) +
scale_shape_identity()
ggplot(expenditure, aes(X1, Y))
ggplot(expenditure, aes(X1, Y)) +
geom_point(aes(shape = Region, color = Region)) +
scale_shape_identity()
ggplot(expenditure, aes(X1, Y)) +
geom_point(aes(shape = Region, color = Region)) +
scale_shape_identity() +
scale_color_brewer(palette="Dark2")
ggplot(expenditure, aes(X1, Y)) +
geom_point(aes(shape = Region, color = Region)) +
scale_shape_identity() +
theme_classic()
ggplot(expenditure, aes(X1, Y)) +
geom_point(aes(shape = Region, color = Region)) +
scale_shape_identity()
ggplot(expenditure, aes(X1, Y)) +
geom_point(aes(shape = Region, color = Region)) +
scale_shape_identity() +
scale_color_gradient(low="blue", high="red")
ggplot(expenditure, aes(X1, Y)) +
geom_point(aes(shape = Region, color = Region)) +
scale_shape_identity() +
scale_color_gradient(low="blue", mid = "white", high="red")
ggplot(expenditure, aes(X1, Y)) +
geom_point(aes(shape = Region, color = Region)) +
scale_shape_identity() +
scale_color_gradient(low="blue", high="red")
qplot(x = X1, y = Y, data = expenditure)
#X1 and Y show a strong positive correlation. On average, as per capita expenditure on public education increases, per capita personal income increases
qplot(x = X2, y = Y, data = expenditure)
#X2 and Y have a linear correlation. The number of resident per thousand remains relatively constant and the per capita expenditure on public education increases.
qplot(x = X3, y = Y, data = expenditure)
#b
ggplot(expenditure, aes(Region, Y)) +
geom_boxplot(aes(group=Region))
ggplot(expenditure, aes(X1, Y)) +
geom_point(aes(shape = Region, color = Region)) +
scale_shape_identity() +
scale_color_gradient(low="blue", high="red")
=======
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
## Calculate the mean, standard deviation, and sample size in order to calculate the lower and upper bounds of the confidence interval.
meanIQ <- sum(y)/length(y)
demeanedSum <- NULL
for(i in 1:length(y)){
demeanedSum[i] <- y[i] - meanIQ
}
squaredError <- demeanedSum^2
variance <- sum(squaredError)/(length(y) - 1)
sdIQ <- sqrt(variance)
z90 <- qt((1-.9)/2, 24)
lower_90 <- meanIQ + z90*sdIQ/sqrt(length(y))
upper_90 <- meanIQ - z90*sdIQ/sqrt(length(y))
confint90 <- c(lower_90, upper_90)
confint90
t.test(y, conf.level = 0.9)
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#confidence coefficient is 0.90
#using qtnorm because n is <30
library(msm)
lapply(c("msm"),  pkgTest)
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# here is where you load any necessary packages
# ex: stringr
# lapply(c("stringr"),  pkgTest)
lapply(c("msm"),  pkgTest)
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
z90 <- qtnorm((1-0.90)/2, lower.tail = FALSE)
n <- length(y)
sample_mean <- mean(y)
sample_sd <- sd(y)
lower_90 <- sample_mean - (z90 * (sample_sd/sqrt(n)))
upper_90 <- sample_mean + (z90 * (sample_sd/sqrt(n)))
confint90 <- c(lower_90, upper_90)
confint90
?qtnorm
#Taking Data set and pasting
problem_1 <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
mean(problem_1) #the sample mean for IQ score is 98.44
length(problem_1) # three are 25 observations by counselor on student IQ scores
sd(problem_1) # the standard deviation of the observations in IQ scores is 13.09
std_error <- sd(problem_1) / sqrt(length(problem_1)) #accounting standard deviation based on our sample size to obtain sample error
std_error # standard error is 2.62
sqrt(10)
qt(0.05,n−1,lower.tail=F)
qt(0.05,25−1,lower.tail=F)
qt(0.05,24,lower.tail=F)
y <- c(105, 69, 86, 100, 82, 111, 104, 110, 87, 108, 87, 90, 94, 113, 112, 98, 80, 97, 95, 111, 114, 89, 95, 126, 98)
#calculate a test statistic
mean(y) #sample mean = 98.44
#population mean = 100
sd(y) #sd of sample = 13.09
13.09/sqrt(25) #standard deviation of sampling distribution = 2.618
(98.44-100)/2.618 #-0.5958747, df=24
SE<−sd(y)/sqrt(n)
# Step 2: Calculate the test statistic for this hypothesis testing of mean
t <− (mean(y) − 100)/SE
SE<-sd(y)/sqrt(n)
# Step 2: Calculate the test statistic for this hypothesis testing of mean
t <- (mean(y) -100)/SE
t
expenditure <- read.table("expenditure.txt", header=T)
# set working directory
setwd("~/GitHub/QTM200Spring2020/problem_sets/PS1")
# set working directory
setwd("~/Documents/GitHub/QTM200Spring2020/problem_sets/PS1")
expenditure <- read.table("expenditure.txt", header=T)
#Please plot the reltionships among Y, X1, X2, and X3.
#Plot Y
expenditure$Y
hist(expenditure$Y, main="Per Capita Expenditure on Public Education", xlab="Y", ylab="Frequency")
#Plot X1
hist(expenditure$X1, main="Per Capita Personal Income", xlab="X1", ylab="Frequency")
#Plot X2
hist(expenditure$X2, main="Number of Residents per Thousand Under 18 Years", xlab="X2", ylab="Frequency")
#Reproduce the above graph adding region and display different regions with different colors/symbols.
plot(expenditure$Y, expenditure$X1, col=as.integer(expenditure$Region), pch=as.integer(expenditure$Region), main = "Public Education Expenditure & Personal Income Per Capita by Region", xlab="Y", ylab="X1")
>>>>>>> upstream/master
