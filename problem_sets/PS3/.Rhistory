filter(starwars, hair == "black")
filter(starwars, hair_color == "black")
filter(starwars, hair_color == "none")
filter(starwars, hair_color == "none" | is.na(hair_color))
flights
mutate(flights, in_flight_gain = dep_delat - arr_delay)
mutate(flights, in_flight_gain = dep_delay - arr_delay)
mutate(flights, air_time_hrs = air_time/60)
##Distance as a proportion
mutate(flights, mean_dist = distance/mean(distance))
##gdpPercap vs. lifeExp for year 1952
new_gap <- filter(gapminder, year = 1952)
##gdpPercap vs. lifeExp for year 1952
new_gap <- filter(gapminder, year == 1952)
qplot(gspPercap, lifeExp, data = new_gap)
qplot(gdpPercap, lifeExp, data = new_gap)
new_gap <- filter(gapminder, year == 1952 & gdpPercap < 90000)
qplot(gdpPercap, lifeExp, data = new_gap)
new_new_gap <- mutate(new_gdp, log_gdp = log(gdpPercap)
new_gap <- filter(gapminder, year == 1952)
new_gap <- filter(gapminder, year == 1952)
new_new_gap <- mutate(new_gdp, log_gdp = log(gdpPercap)
new_gap <- filter(gapminder, year == 1952)
new_new_gap <- mutate(new_gdp, log_gdp = log(gdpPercap))
new_gap <- filter(gapminder, year == 1952)
new_new_gap <- mutate(new_gdp, log_gdp = log(gdpPercap))
new_gap <- filter(gapminder, year == 1952)
new_new_gap <- mutate(new_gap, log_gdp = log(gdpPercap))
qplot(gdpPercap, lifeExp, data = new_new_gap)
new_gap <- filter(gapminder, year == 1952)
new_new_gap <- mutate(new_gap, log_gdp = log(gdpPercap))
qplot(gdpPercap, lifeExp, data = new_new_gap)
qplot(log_gdp, lifeExp, data = new_new_gap)
sum(1,2,3,4)
1 %>% sum (2,3,4)
sum(1, 3) %>% mean(1)
gapminder %>% filter(year == 1952)
gapminder %>%
filter(year == 1952) %>%
mutate(log_gdp = log(gdpPercap))
qplot(log_gdp, LifeExp, data = new_gap)
gapminder %>%
filter(year == 1952) %>%
mutate(log_gdp = log(gdpPercap))
gapminder %>%
filter(year == 1952) %>%
mutate(log_gdp = log(gdpPercap))
qplot(log_gdp, LifeExp, data = new_gap)
gapminder %>%
filter(year == 1952) %>%
mutate(log_gdp = log(gdpPercap))
new_gap <- gapminder %>%
filter(year == 1952) %>%
mutate(log_gdp = log(gdpPercap))
qplot(log_gdp, LifeExp, data = new_gap)
qplot(log_gdp, lifeExp, data = new_gap)
library(tidyverse)
library(nycflights13)
library(gapminder)
select(gapminder, continent)
library(nycflights13)
##Summarize
##Setting mean function to a value creates a column title
summarize(flights, mean_dep_delay = mean(dep_delay, na.rm = TRUE))
##Further Grouping
flights %>%
group_by(month, day) %>%
summarize(mean_dep_delay = mean(dep_delay, na.rm = TRUE))
qplot(gdpPercap, lifeExp, data = gapminder)
filter(gapminder, year == 2002 & year == 2007)
filter(gapminder, year == 2002 & year == 2007) %>%
qplot(gdpPercap, lifeExp, data = gapminder)
2002and2007 <- filter(gapminder, year == 2002 & year == 2007)
2002and2007 <- filter(gapminder, year == "2002"" & year == "2007")
gapminder_filtered <- filter(gapminder, year == "2002" & year == "2007")
qplot(gdpPercap, lifeExp, data = gapminder_filtered)
##ggplot vs. qplot
qplot(x = gdpPercap, y = lifeExp, data = gapminder, facets = continent~year)
##Dots too large so...
qplot(x = gdpPercap, y = lifeExp, data = gapminder, size = I(0.5), facets = continent~year)
##Free up scales in ggplot
ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(size = 0.5) +
facet_grid(continent~year, scales = "free")
## Afghan. in 1952 v. lifeExp
ggplot() + geom_point(mapping = aes(x = 779, y = 28.8))
##Adding elements based on data frame
ggplot() +
geompoint(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp))
##Adding elements based on data frame
ggplot() +
geom_point(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp))
##Adding elements based on data frame
ggplot() +
geom_point(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_smooth(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp))
##Common issue with ggplot: watch plus signs
ggplot(gapminder, aes(gdpPercap, lifeExp))
library(babynames)
install.packages("babynames")
library(babynames)
library(tidyverse)
library(tidyverse)
library(gapminder)
head(babynames)
babynames %>%
group_by(sex) %>%
filter(prop == max(prop, na.rm = TRUE))
summarize(babynames, males = count(sex, na.rm = TRUE))
head(babynames)
babynames %>%
group_by(sex) %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
group_by(year) %>%
filter(count == count(sex, na.rm = TRUE))
babynames %>%
group_by(year) %>%
filter(sex = F)
babynames %>%
group_by(year) %>%
filter(sex == M)
babynames %>%
group_by(year) %>%
filter(sex == "M")
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M")
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M", n == sum(n))
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M", m == sum(n))
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M", n == sum(n))
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M")
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M") %>%
summarize(n_sum == sum(n))
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M") %>%
summarize(sum == sum(n))
babynames %>%
group_by(year) %>%
filter(year == 1982, sex == "M") %>%
summarize(n == sum(n))
babynames %>%
filter(year == 1982, sex == "M")
babynames %>%
filter(year == 1982, sex == "M") %>%
sum(n)
babynames %>%
filter(year == 1982, sex == "M") %>%
sum(n, na.rm = TRUE)
babynames %>%
filter(year == 1982, sex == "M")
babynames %>%
filter(year == 1982, sex == "M", n == sum(n))
babynames %>%
filter(year == 1982, sex == "M")
sum(babynames$n)
babynames %>%
select(year == 1982, sex == "M")
sum(babynames$n)
babynames %>%
filter(year == 1982, sex == "M")
babynames %>%
filter(year == 1982, sex == "M") %>%
sum(n)
babynames %>%
filter(year == 1982, sex == "M") %>%
count(n)
babynames %>%
filter(year == 1982, sex == "M") %>%
count(n)
babynames %>%
filter(year == 1982, sex == "M")
babynames %>%
filter(year == 1982, sex == "M") %>%
tally(n)
babynames %>%
group_by(sex)
babynames %>%
group_by(sex, year)
head(babynames)
babynames %>%
group_by(sex, year) %>%
summarize(names = tally(name))
babynames %>%
group_by(sex, year) %>%
summarize(name = tally(name))
head(babynames)
babynames %>%
filter(year == 1982, sex == "M") %>%
mutate(total = sum(n))
head(babynames)
select(babynames, year,sex,n)
select(babynames, year,sex,n) %>%
sum(n)
select(babynames, year,sex,n) %>%
group_by(year, sex) %>%
summarize(number_per_year = sum(n))
babynames %>%
filter(year = 2017) %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
filter(year == 2017) %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
filter(year == 2017, sex = "M") %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
filter(year == 2017, sex == "M") %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
filter(year == 2017, sex == "M", sex == "F") %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
group_by(sex) %>%
filter(year == 2017, sex == "M") %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
filter(year == 2017, sex == "M")
babynames %>%
filter(year == 2017, sex == "M") %>%
arrange(desc(prop))
babynames %>%
filter(year == 2017) %>%
arrange(desc(prop))
top_names_2017 = babynames %>%
filter(year == 2017) %>%
arrange(desc(prop))
top_names_2017
top_names_2017 = c("Emma", "Olivia", "Liam", "Noah")
top_names_2017
head(babynames)
babynames %>%
filter(name == top_names_2017)
head(babynames)
babynames %>%
filter(name == top_names_2017) %>%
qplot(year, prop)
babynames %>%
group_by(name) %>%
qplot(year, prop)
babynames %>%
group_by(name) %>%
qplot(year, prop, babynames)
babynames %>%
group_by(name)
babynames %>%
filter(name == top_names_2017)
qplot(year, prop, babynames)
babynames %>%
filter(name == top_names_2017) %>%
qplot(year, prop, babynames)
babynames %>%
filter(name == top_names_2017) %>%
qplot(year, n, babynames)
babynames$prop
babynames %>%
filter(name == top_names_2017) %>%
qplot(year, prop, babynames, color = name)
babynames %>%
filter(name == top_names_2017) %>%
qplot(x = year, y = prop, babynames, color = name)
names_filt <- filter(babynames, name %in% top_names_2017)
names_filt
qplot(x = year, y = prop, names_filt, geom = 'line', color = name)
library(gapminder)
gap_filt <- filter(gapminder,
country %in% c("China", "India", "Sierra Leone"))
qplot(x = year,
y = gdpPercap,
data = gap_filt,
geom = 'line',
color = country)
gap_filt
names_filt
qplot(x = year, y = prop, names_filt, geom = 'line', color = name)
ggplot(data = names_filt, mapping = aes(x = year, y = prop))
##Free up scales in ggplot
ggplot(data = gapminder,
mapping = aes(x = gdpPercap, y = lifeExp)) +
geom_point(size = 0.5) +
facet_grid(continent~year, scales = "free")
ggplot(data = names_filt, mapping = aes(x = year, y = prop) + geom_line(size = 0.5))
ggplot() + geom_line(data = names_filt, mapping = aes(x = year, y = prop)))
ggplot() + geom_line(data = names_filt, mapping = aes(x = year, y = prop))
names_filt <- filter(babynames, name %in% top_names_2017)
names_filt <- filter(babynames, name %in% top_names_2017)
ggplot() + geom_line(data = names_filt, mapping = aes(x = year, y = prop))
library(babynames)
library(tidyverse)
library(gapminder)
head(babynames)
babynames %>%
group_by(sex) %>%
filter(prop == max(prop, na.rm = TRUE))
## Mary
babynames %>%
filter(year == 1982, sex == "M") %>%
mutate(total = sum(n))
##1,814,611
select(babynames, year, sex, n) %>%
group_by(year, sex) %>%
summarize(number_per_year = sum(n))
babynames %>%
filter(year == 2017) %>%
arrange(desc(prop))
top_names_2017 = c("Emma", "Olivia", "Liam", "Noah")
names_filt <- filter(babynames, name %in% top_names_2017)
ggplot() + geom_line(data = names_filt, mapping = aes(x = year, y = prop))
ggplot() + geom_line(data = names_filt, mapping = aes(x = year, y = prop), color = name)
ggplot() + geom_line(data = names_filt, mapping = aes(x = year, y = prop), color = "name")
ggplot() + geom_line(data = names_filt, mapping = aes(x = year, y = prop, color = name))
names_filt_high <- filter(names_filt, prop > 0.0002)
ggplot() + geom_line(data = names_filt_high, mapping = aes(x = year, y = prop, color = name))
library(gapminder)
##ggplot vs. qplot
qplot(x = gdpPercap, y = lifeExp, data = gapminder, facets = continent~year)
library(tidyverse)
##ggplot vs. qplot
qplot(x = gdpPercap, y = lifeExp, data = gapminder, facets = continent~year)
library(babynames)
library(tidyverse)
library(gapminder)
head(babynames)
babynames %>%
group_by(sex) %>%
filter(prop == max(prop, na.rm = TRUE))
babynames %>%
filter(year == 1982, sex == "M") %>%
mutate(total = sum(n))
library(tidyverse)
gss_fake <- gss_cat %>% mutate(empl = sample(c("Yes", "No"),
as.double(count(gss_cat)),
replace = T
)
)
state.name
state.abb
state.keys <- tibble(state = state.name, ab = state.abb)
state.keys
midwest
ggplot(midwest, aes(PID, percbelowpoverty)) +
geom_point(group = state)
midwest
ggplot(midwest, aes(PID, percbelowpoverty)) +
geom_point(aes(color = state, shape = state))
##Quiz 3 Question
ggplot(midwest, aes(PID, percbelowpoverty)) +
geom_point(aes(group = state, color = state, shape = state))
library(nycflights13)
filter(flights, month == 1 & day == 1)
filter(flights, month == 1 & month == 2)
filter(flights, month == 1 | month == 2)
library(tidyverse)
newgss <- read.csv("newgss.csv")
txhousing_filter <- filter(txhousing, year == 2014 & city == c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
txhousing_filter
txhousing
txhousing
txhousing_filter <- filter(txhousing, year == 2014 & city == c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
txhousing_filter <- filter(txhousing, year == 2014 & city == c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
head(txhousing_filter)
ggplot(txhousing_filter, aes(month, median)) +
geom_point(aes(color = city), size = 0.5) +
geom_line(aes(color = city), alpha = 0.5)
txhousing_filter <- filter(txhousing, year == 2014 & city == c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
ggplot(txhousing_filter, aes(month, median)) +
geom_point(aes(color = city), size = 0.5) +
geom_line(aes(color = city), alpha = 0.5)
ggplot(txhousing_filter, aes(month, median)) +
geom_point(aes(color = city), size = 0.5)
txhousing_filter <- filter(txhousing, year == 2014)
txhousing_filter <- filter(txhousing, year == 2014)
txhousing_filter2 <- filter(txhousing_filter, city == c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
txhousing_filter2 <- filter(txhousing_filter, city %in% c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
ggplot(txhousing_filter2, aes(month, median)) +
geom_point(aes(color = city), size = 0.5) +
geom_line(aes(color = city), alpha = 0.5)
txhousing_filter2 <- filter(txhousing_filter,year == 2014 & city %in% c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
ggplot(txhousing_filter2, aes(month, median)) +
geom_point(aes(color = city), size = 0.5) +
geom_line(aes(color = city), alpha = 0.5)
txhousing_filter <- filter(txhousing_filter,year == 2014 & city %in% c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
ggplot(txhousing_filter, aes(month, median)) +
geom_point(aes(color = city), size = 0.5) +
geom_line(aes(color = city), alpha = 0.5)
txhousing_filter <- filter(txhousing, year == 2014 & city %in% c('Austin', 'Collin County', 'Dallas', 'Denton County', 'Fort Bend', 'Fort Worth', 'Houston', 'Montgomery County', 'San Antonio'))
ggplot(txhousing_filter, aes(month, median)) +
geom_point(aes(color = city), size = 0.5) +
geom_line(aes(color = city), alpha = 0.5)
install.packages(fastqcr)
install.packages("fastqcr")
library(fastqcr)
fastqc_install(dest.dir = "~/bin")
fastqc(fq.dir = "~/bin/sratoolkit.2.9.6-1-mac64/bin", qc.dir = NULL, threads = 4, fastqc.path = "~/bin/fastQC")
fastqc(fq.dir = "~/bin/sratoolkit.2.9.6-1-mac64/bin", qc.dir = NULL, threads = 4, fastqc.path = "~/bin/fastQC/fastqc")
fastqc(fq.dir = "~/bin/sratoolkit.2.9.6-1-mac64/bin", qc.dir = NULL, threads = 4, fastqc.path = "~/bin/fastQC/fastqc")
fastqc(fq.dir = "~/bin/sratoolkit.2.9.6-1-mac64/bin", qc.dir = NULL, threads = 4, fastqc.path = "~/bin/fastQC/fastqc")
fastqc(fq.dir = "~/bin/sratoolkit.2.9.6-1-mac64/bin", qc.dir = NULL, threads = 4, fastqc.path = "~/bin/fastQC/fastqc")
getwd()
incumbents <- read.csv("incumbents_subset.csv")
setwd("~/Documents/GitHub/QTM200Spring2020/problem_sets/PS3")
incumbents <- read.csv("incumbents_subset.csv")
##1.1
voteshare_difflog <- lm(incumbents$voteshare~incumbents$difflog)
#1.2
plot(incumbents$difflog, incumbents$voteshare)
abline(voteshare_difflog)
#1.3
res_vd <- residuals(voteshare_difflog)
voteshare_difflog
#2.1
presvote_difflog <- lm(incumbents$presvote~incumbents$difflog)
presvote_difflog
#3.1
voteshare_presvote <- lm(incumbents$voteshare~incumbents$presvote)
voteshare_presvote
#4.1
residuals1_2 <- lm(res_vd~res_pd)
incumbents <- read.csv("incumbents_subset.csv")
##1.1
voteshare_difflog <- lm(incumbents$voteshare~incumbents$difflog)
#1.2
plot(incumbents$difflog, incumbents$voteshare)
abline(voteshare_difflog)
#1.3
res_vd <- residuals(voteshare_difflog)
#2.1
presvote_difflog <- lm(incumbents$presvote~incumbents$difflog)
#2.2
plot(incumbents$difflog, incumbents$presvote)
abline(presvote_difflog)
#2.3
res_pd <- residuals(presvote_difflog)
#3.1
voteshare_presvote <- lm(incumbents$voteshare~incumbents$presvote)
#3.2
plot(incumbents$presvote, incumbents$voteshare)
abline(voteshare_presvote)
#4.1
residuals1_2 <- lm(res_vd~res_pd)
#4.2
plot(res_pd, res_vd)
abline(residuals1_2)
#4.1
residuals1_2 <- lm(res_vd~res_pd)
residuals1_2
#4.2
plot(res_pd, res_vd)
abline(residuals1_2)
#4.1
residuals1_2 <- lm(res_vd~res_pd)
#4.2
plot(res_pd, res_vd)
abline(residuals1_2)
#5.1
lm(voteshare~difflog+presvote, data = incumbents)
#1.2
plot(incumbents$difflog, incumbents$voteshare)
abline(voteshare_difflog, col = "blue")
#2.2
plot(incumbents$difflog, incumbents$presvote)
abline(presvote_difflog)
abline(presvote_difflog, col = "blue")
#3.1
voteshare_presvote <- lm(incumbents$voteshare~incumbents$presvote)
#3.2
plot(incumbents$presvote, incumbents$voteshare)
abline(voteshare_presvote, col = "blue")
#4.2
plot(res_pd, res_vd)
abline(residuals1_2)
abline(residuals1_2, col = "blue")
#5.1
lm(voteshare~difflog+presvote, data = incumbents)
#4.1
residuals1_2 <- lm(res_vd~res_pd)
residuals1_2
summary(voteshare_difflog)
summary(presvote_difflog)
#3.2
plot(incumbents$presvote, incumbents$voteshare)
abline(voteshare_presvote, col = "blue")
summary(voteshare_presvote)
#3.1
voteshare_presvote <- lm(incumbents$voteshare~incumbents$presvote)
summary(voteshare_presvote)
#3.2
plot(incumbents$presvote, incumbents$voteshare)
abline(voteshare_presvote, col = "blue")
summary(residuals1_2)
#4.2
plot(res_pd, res_vd)
abline(residuals1_2, col = "blue")
#5.1
bivariate <- lm(voteshare~difflog+presvote, data = incumbents)
summary(bivariate)
